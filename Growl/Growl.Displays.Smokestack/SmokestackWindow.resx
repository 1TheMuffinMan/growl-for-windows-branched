<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="closeButton.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        TkSuQmCC
</value>
  </data>
</root>